# Based on: https://github.com/SumoLogic/fluentd-kubernetes-sumologic/blob/master/conf.d/source.kubernetes.conf
# Example:
# 2015-12-21 23:17:22,066 [salt.state       ][INFO    ] Completed state [net.ipv4.ip_forward] at time 23:17:22.066081
<source>
  type tail
  format /^(?<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\] (?<message>.*)$/
  time_format %Y-%m-%d %H:%M:%S
  path /var/log/salt/minion
  pos_file /var/pos/opsdx-salt.pos
  tag salt
</source>

<filter salt.**>
  type kubernetes_sumologic
  source_category salt
  source_name k8s_salt
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>


# Example:
# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script
<source>
  type tail
  format syslog
  path /var/log/startupscript.log
  pos_file /var/pos/opsdx-startupscript.log.pos
  tag startupscript
</source>

<filter startupscript.**>
  type kubernetes_sumologic
  source_category startupscript
  source_name k8s_startupscript
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>


# Multi-line parsing is required for all the kube logs because very large log
# statements, such as those that include entire object bodies, get split into
# multiple lines by glog.

# Example:
# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]
<source>
  type tail
  format multiline
  multiline_flush_interval 5s
  format_firstline /^\w\d{4}/
  format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
  time_format %m%d %H:%M:%S.%N
  path /var/log/kubelet.log
  pos_file /var/pos/opsdx-kubelet.log.pos
  tag kubelet
</source>

<filter kubelet.**>
  type kubernetes_sumologic
  source_category kubelet
  source_name k8s_kubelet
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>

# Example:
# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]
<source>
  type tail
  format multiline
  multiline_flush_interval 5s
  format_firstline /^\w\d{4}/
  format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
  time_format %m%d %H:%M:%S.%N
  path /var/log/kube-apiserver.log
  pos_file /var/pos/opsdx-kube-apiserver.log.pos
  tag kube-apiserver
</source>

<filter kube-apiserver.**>
  type kubernetes_sumologic
  source_category kube-apiserver
  source_name k8s_kube-apiserver
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>


# Example:
# I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui
<source>
  type tail
  format multiline
  multiline_flush_interval 5s
  format_firstline /^\w\d{4}/
  format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
  time_format %m%d %H:%M:%S.%N
  path /var/log/kube-controller-manager.log
  pos_file /var/pos/opsdx-kube-controller-manager.log.pos
  tag kube-controller-manager
</source>

<filter kube-controller-manager.**>
  type kubernetes_sumologic
  source_category kube-controller-manager
  source_name k8s_kube-controller-manager
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>


# Example:
# W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]
<source>
  type tail
  format multiline
  multiline_flush_interval 5s
  format_firstline /^\w\d{4}/
  format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
  time_format %m%d %H:%M:%S.%N
  path /var/log/kube-scheduler.log
  pos_file /var/pos/opsdx-kube-scheduler.log.pos
  tag kube-scheduler
</source>

<filter kube-scheduler.**>
  type kubernetes_sumologic
  source_category kube-scheduler
  source_name k8s_kube-scheduler
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>



# Example:
# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf
<source>
  type tail
  format multiline
  multiline_flush_interval 5s
  format_firstline /^\w\d{4}/
  format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
  time_format %m%d %H:%M:%S.%N
  path /var/log/glbc.log
  pos_file /var/pos/opsdx-glbc.log.pos
  tag glbc
</source>

<filter glbc.**>
  type kubernetes_sumologic
  source_category glbc
  source_name k8s_glbc
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>


# Example:
# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf
<source>
  type tail
  format multiline
  multiline_flush_interval 5s
  format_firstline /^\w\d{4}/
  format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
  time_format %m%d %H:%M:%S.%N
  path /var/log/cluster-autoscaler.log
  pos_file /var/pos/opsdx-cluster-autoscaler.log.pos
  tag cluster-autoscaler
</source>


<filter cluster-autoscaler.**>
  type kubernetes_sumologic
  source_category cluster-autoscaler
  source_name k8s_cluster-autoscaler
  source_category_prefix "#{ENV['SOURCE_CATEGORY_PREFIX']}"
</filter>