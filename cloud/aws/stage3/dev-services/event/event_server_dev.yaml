---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx-config: |-
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name _;
        location / {
          proxy_pass http://127.0.0.1:8000;
        }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: event-server-dev
spec:
  replicas: 4
  template:
    metadata:
      labels:
        app: event-server-dev
    spec:
      nodeSelector:
        opsdx_nodegroup: spot-nodes
      containers:
      - name: trews-nginx
        image: nginx:alpine
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
        ports:
        - containerPort: 80
        volumeMounts:
          - name: config-volume
            mountPath: "/etc/nginx/conf.d/"
      - name: event-server-dev
        image: 359300513585.dkr.ecr.us-east-1.amazonaws.com/universe-dev:latest
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 8000
        command: ["/bin/sh","-c"]
        args: ["cd /etl/events-soap; . $NVM_DIR/nvm.sh; env; sh start.sh"]
        # args: ["sleep 10000"]
        securityContext:
          capabilities:
            add:
            - "SYS_PTRACE"
        env:
        - name: event_forward
          # value: ""
          value: "https://event-rest-dev.jh.opsdx.io/epic"
        - name: epic_env
          value: "dev"
        - name: NVM_DIR
          value: "/root/.nvm"
        - name: metrics_dimension_value
          value: "opsdx-dev"
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: rest-api-db-secrets
              key: aws-region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: rest-api-db-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: rest-api-db-secrets
              key: aws-secret-access-key
      volumes:
        - name: config-volume
          configMap:
            name: nginx-config
            items:
              - key: nginx-config
                path: trews.conf
---
apiVersion: v1
kind: Service
metadata:
  name: event-svc-dev
  labels:
    app: event-server-dev
spec:
  type: NodePort
  ports:
  - port: 80
    name: http
    targetPort: 80
  selector:
    app: event-server-dev
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: event-server-ingress-dev
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingrees.kubernetes.io/ingress.allow-http: "false"
spec:
  rules:
  - host: event-dev.jh.opsdx.io
    http:
      paths:
      - backend:
          serviceName: event-svc-dev
          servicePort: 80
        path: /
