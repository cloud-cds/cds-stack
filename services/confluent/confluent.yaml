---
apiVersion: v1
kind: Service
metadata:
  name: confluent-headless
  labels:
    app: confluent-headless
spec:
  ports:
  - port: 9092
    name: listener
  clusterIP: None
  selector:
    app: confluent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluent-config
data:
  zk: "zk-0.zk-headless,zk-1.zk-headless,zk-2.zk-headless"
  listener: "PLAINTEXT://:9092"
  heap: "-Xmx1G -Xms1G"
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: confluent-budget
spec:
  selector:
    matchLabels:
      app: confluent
  minAvailable: 2
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: confluent
spec:
  serviceName: confluent-headless
  replicas: 3
  template:
    metadata:
      labels:
        app: confluent
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [{
                  "labelSelector": {
                    "matchExpressions": [{
                      "key": "app",
                      "operator": "In",
                      "values": ["confluent"]
                    }]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }]
              }
            }
    spec:
      containers:
      - name: k8scp
        image: confluentinc/cp-kafka:3.1.1
        resources:
          requests:
            memory: "1Gi"
        ports:
        - containerPort: 9092
          name: listener
        env:
        - name : KAFKA_ZOOKEEPER_CONNECT
          valueFrom:
            configMapKeyRef:
                name: confluent-config
                key: zk
        - name: KAFKA_ADVERTISED_LISTENERS
          valueFrom:
            configMapKeyRef:
                name: confluent-config
                key: listener
        - name: KAFKA_HEAP_OPTS
          valueFrom:
            configMapKeyRef:
                name: confluent-config
                key: heap
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/kafka
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.beta.kubernetes.io/storage-class: ebs-pv
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi